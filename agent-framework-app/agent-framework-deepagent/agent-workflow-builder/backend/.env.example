# ==============================================================================
# Agent Workflow Builder - Environment Configuration
# ==============================================================================
# Copy this file to .env and fill in your actual values
# IMPORTANT: Never commit .env files to version control!

# ==============================================================================
# API Configuration
# ==============================================================================
API_HOST=0.0.0.0
API_PORT=8000
DEBUG=true
ENVIRONMENT=development  # Options: development, staging, production

# ==============================================================================
# Security
# ==============================================================================
# Generate a secure secret key using: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-secret-key-here-change-this-in-production
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ==============================================================================
# Database Configuration
# ==============================================================================
# SQLite (for development)
DATABASE_URL=sqlite:///./agent_workflows.db

# PostgreSQL (for production)
# DATABASE_URL=postgresql://username:password@localhost:5432/agent_workflows

# ==============================================================================
# Azure OpenAI Configuration (Recommended)
# ==============================================================================
# Get these from your Azure Portal: https://portal.azure.com
# Navigate to: Azure OpenAI Service -> Keys and Endpoint
AZURE_OPENAI_ENDPOINT=https://your-resource-name.openai.azure.com/
AZURE_OPENAI_API_KEY=your-azure-openai-api-key-here
AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4
AZURE_OPENAI_API_VERSION=2024-02-15-preview

# Authentication Method: 'api_key' or 'azure_cli' (requires `az login`)
AZURE_AUTH_METHOD=azure_cli

# ==============================================================================
# OpenAI Configuration (Alternative to Azure OpenAI)
# ==============================================================================
# Get your API key from: https://platform.openai.com/api-keys
# OPENAI_API_KEY=your-openai-api-key-here

# ==============================================================================
# MCP (Model Context Protocol) Configuration
# ==============================================================================
# Microsoft Learn MCP Server
MICROSOFT_LEARN_MCP_URL=https://learn.microsoft.com/api/mcp

# Context7 MCP Server  
CONTEXT7_MCP_URL=

# ==============================================================================
# CORS Configuration
# ==============================================================================
# Comma-separated list of allowed origins
ALLOWED_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000","http://localhost:5173"]

# ==============================================================================
# Logging Configuration
# ==============================================================================
LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL

# ==============================================================================
# Workflow Configuration
# ==============================================================================
# Maximum execution time for a workflow (in seconds)
MAX_WORKFLOW_EXECUTION_TIME=3600  # 1 hour

# Maximum number of concurrent workflow executions
MAX_CONCURRENT_WORKFLOWS=10

# ==============================================================================
# File Storage Configuration
# ==============================================================================
UPLOAD_DIR=./uploads
MAX_FILE_SIZE=10485760  # 10 MB

# ==============================================================================
# SETUP INSTRUCTIONS
# ==============================================================================
# 
# 1. Copy this file to .env:
#    cp .env.example .env
#
# 2. Generate a secure SECRET_KEY:
#    python -c "import secrets; print(secrets.token_urlsafe(32))"
#
# 3. Choose your AI provider:
#    - For Azure OpenAI: Set AZURE_OPENAI_* variables
#    - For OpenAI: Set OPENAI_API_KEY
#
# 4. Authentication for Azure:
#    - Run `az login` in your terminal for Azure CLI auth
#    - OR set AZURE_OPENAI_API_KEY for API key auth
#
# 5. Start the application:
#    uvicorn app.main:app --reload
#
# ==============================================================================